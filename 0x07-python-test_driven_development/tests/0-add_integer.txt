The ``add_integer`` module
==========================

Using ``factorial``
-------------------

Importing function from module:
	>>> add_integer = __import__('0-add_integer')

Adding 1 and 2
	>>> add_integer(1, 2)
	3

Adding positive 100 and negative number -2
	>>> add_integer(100, -2)
	98

Adding a number 2 with the default value of b=98
	>>> add_integer(2)
	100

Adding a floating value 2.1 with the default value of b=98
	>>> add_integer(2.1)
	100

Adding a string and an int
	>>> add_integer(4, 'school')
	Traceback (most recent call last):
		...
	TypeError: b must be an integer

Passing None
	>>> add_integer(None)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Adding a letter two strings
	>>> add_integer('4', '1')
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Adding two float
	>>> add_integer(4.1, 4.2)
	8

Adding a negative value to the default value of b (b=98)
	>>> add_integer(-1)
	97

Case overflow 1:
	>>> add_integer(float('inf'), 0)
	Traceback (most recent call last):
		...
	OverflowError: cannot convert float infinity to integer

Case Overflow 2:
	>>> add_integer(float('inf'), float('-inf'))
	Traceback (most recent call last):
		...
	OverflowError: cannot convert float infinity to integer

Case NaN:
	>>> add_integer(float('nan'))
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer
